<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="admin_security.controller.security.class">FSi\Bundle\AdminSecurityBundle\Controller\SecurityController</parameter>
        <parameter key="admin_security.controller.admin.class">FSi\Bundle\AdminSecurityBundle\Controller\AdminController</parameter>
        <parameter key="admin_security.template.security.login">FSiAdminSecurityBundle:Security:login.html.twig</parameter>
        <parameter key="admin_security.template.admin.change_password">FSiAdminSecurityBundle:Admin:change_password.html.twig</parameter>
        <parameter key="admin_security.form.change_password_type.class">FSi\Bundle\AdminSecurityBundle\Form\Type\Admin\ChangePasswordType</parameter>
        <parameter key="admin_security.listener.doctrine_change_password_listener.class">FSi\Bundle\AdminSecurityBundle\EventListener\DoctrineChangePasswordListener</parameter>
        <parameter key="admin_security.listener.secured_element_listener.class">FSi\Bundle\AdminSecurityBundle\EventListener\SecuredElementListener</parameter>
        <parameter key="admin_security.listener.tools_menu_listener.class">FSi\Bundle\AdminSecurityBundle\EventListener\ToolsMenuListener</parameter>
    </parameters>

    <services>
        <!-- Controllers -->
        <service id="admin_security.controller.security" class="%admin_security.controller.security.class%">
            <argument type="service" id="templating" />
            <argument type="string">%admin_security.template.security.login%</argument>
            <argument type="service" id="form.csrf_provider" on-invalid="ignore"/>
        </service>

        <service id="admin_security.controller.admin" class="%admin_security.controller.admin.class%">
            <argument type="service" id="templating" />
            <argument type="service" id="admin_security.form.change_password" />
            <argument type="service" id="security.context" />
            <argument type="service" id="router" />
            <argument type="service" id="event_dispatcher" />
            <argument type="string">%admin_security.template.admin.change_password%</argument>
        </service>

        <!-- Forms -->
        <service id="admin_security.form.change_password_type" class="%admin_security.form.change_password_type.class%" />

        <service id="admin_security.form.change_password" class="Symfony\Component\Form\FormInterface"
                factory-service="form.factory" factory-method="create">
            <argument type="service" id="admin_security.form.change_password_type" />
            <argument type="collection"/>
        </service>

        <!-- Event listeners -->
        <service id="admin_security.listener.doctrine_change_password_listener" class="%admin_security.listener.doctrine_change_password_listener.class%">
            <argument type="service" id="doctrine" />
            <argument type="service" id="security.encoder_factory" />
            <tag name="kernel.event_listener" event="admin.security.change_password" method="onChangePassword" />
        </service>

        <service id="admin_security.listener.secured_element_listener" class="%admin_security.listener.secured_element_listener.class%">
            <argument type="service" id="admin.manager" />
            <argument type="service" id="security.context" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="0"/>
        </service>

        <service id="admin_security.listener.tools_menu_listener" class="%admin_security.listener.tools_menu_listener.class%">
            <argument type="service" id="translator" />
            <argument type="service" id="security.context" />
            <tag name="kernel.event_listener" event="fsi_admin.menu.tools" method="createAccountMenu" />
        </service>
    </services>

</container>
